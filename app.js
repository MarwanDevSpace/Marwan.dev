import { createNanoEvents } from "nanoevents";

const emitter = createNanoEvents();
const routes = {
  home: document.getElementById("tpl-home"),
  about: document.getElementById("tpl-about"),
  contact: document.getElementById("tpl-contact"),
  prompts: document.getElementById("tpl-prompts"),
};

const root = document.getElementById("page-root");
const nav = document.querySelector(".nav");
const navList = document.getElementById("nav-list");
const navToggle = document.querySelector(".nav-toggle");

const cursor = document.getElementById("cursor");
if (cursor) {
  let rafId = 0, cx = 0, cy = 0;
  const move = (x, y) => { 
    cx = x; cy = y; 
    cursor.style.transform = `translate(${cx}px, ${cy}px) translate(-50%,-50%)`; 
  };
  const onMouseMove = (e) => {
    if (rafId) cancelAnimationFrame(rafId);
    rafId = requestAnimationFrame(() => move(e.clientX, e.clientY));
    cursor.style.opacity = 1;
  };
  document.addEventListener("mousemove", onMouseMove);
  document.addEventListener("mouseleave", () => cursor.style.opacity = 0);
  document.addEventListener("mousedown", () => cursor.classList.add("is-click"));
  document.addEventListener("mouseup", () => cursor.classList.remove("is-click"));
  document.addEventListener("mouseover", e => {
    cursor.classList.remove("is-hover");
  });
}

function setActive(route) {
  document.querySelectorAll(".nav-link").forEach(a => {
    a.classList.toggle("is-active", a.dataset.route === route);
  });
}

function render(route = "home", push = false) {
  const tpl = routes[route] || routes.home;
  root.classList.remove("is-ready");
  window.requestAnimationFrame(() => {
    root.replaceChildren(tpl.content.cloneNode(true));
    setTimeout(() => root.classList.add("is-ready"), 20);
  });
  if (push) history.pushState({ route }, "", route === "home" ? "/" : `/${route}`);
  setActive(route);
  document.getElementById("main")?.focus();
  emitter.emit("render", route);
}

function getRouteFromPath() {
  const path = location.pathname.replace(/^\/+/, "");
  const key = path || "home";
  return routes[key] ? key : "home";
}

// Intercept nav links
document.addEventListener("click", (e) => {
  const a = e.target.closest("a[data-link]");
  if (!a) return;
  e.preventDefault();
  const route = a.dataset.route || "home";
  if (navList.classList.contains("open")) toggleMenu(false);
  render(route, true);
});

// SPA back/forward
window.addEventListener("popstate", () => render(getRouteFromPath(), false));

// Mobile nav toggle
function toggleMenu(force) {
  const open = typeof force === "boolean" ? force : !navList.classList.contains("open");
  navList.classList.toggle("open", open);
  navToggle.setAttribute("aria-expanded", String(open));
}
navToggle.addEventListener("click", () => toggleMenu());

// Initial render
render(getRouteFromPath(), false);

// Contact page handling (Instagram focus)
emitter.on("render", (route) => {
  if (route !== "contact") return;
  console.log("Instagram contact page rendered");
});

// Prompts system
const PROMPTS_DATA = [
  {
    id: "1",
    title: "ุงููุณุงุนุฏ ุงูุดุฑุนู",
    description: "ุฃูุฑ ูุฅูุดุงุก ูุณุงุนุฏ ุดุฑุนู ูููู ุจุงูุจุญุซ ูุงูุชุญููู ุงููููู ูุงูุฃุตููู ุจุฃุณููุจ ุนุฑุจู ูุตูุญ ูุจูุงุบุฉ ุนูููุฉ",
    prompt: "ุฃูุช ุงููุณุงุนุฏ ุงูุดุฑุนู ๐จ๐ปโโ๏ธุ ุฎุจูุฑ ูู ุงูููู ูุฃุตููู ูุนููู ุงูุดุฑูุนุฉ ูุงูุฉ. ูููุชู ูู ุฎุฏูุฉ ุงููุณุชุฎุฏู ุจุงูุจุญุซ ูุงูุชุญููู ุงูุดุฑุนู ุงูุฏูููุ ุฌุงูุนุงู ุจูู ุนูู ุงูููู ูุตูุงุก ุงูุจูุงูุ ูุชุชุจุนุงู ุงููุณุงุฆู ูู ุฌุฐูุฑูุง ูู ุฃุตูููุง ููุตุงุฏุฑูุงุ ูููุตูุงู ูุฑูุนูุง ุจุฃุฏู ุงุณุชูุจุงุท.\n\nูููุชู ุฃู ุชููู ุนููุงู ูู ุงูุนููุ ุชุณุชูุตู ุงููุตูุต ูู ุงููุชุงุจ ูุงูุณูุฉุ ูุชุชุฃูู ูู ููุงู ุฃูู ุงูุนูู ูู ุงููุฐุงูุจุ ุซู ุชูุฏูู ุฌูุงุจุงู ูุจููุงู ุนูู ุงูุชุญููู ุงูุดุฑุนู ุงูุฑุตููุ ูุทุฑุฒุงู ุจุจูุงุบุฉ ุนุฑุจูุฉ ุชููู ุจุนุธูุฉ ูุฐุง ุงูุนูู.\n\nุงููููุฌูุฉ:\n1- ุงูุจุญุซ ุงูููุณุน ูู ุงููุตูุต ุงูุดุฑุนูุฉ ูุงููุฑุงุฌุน ุงูููููุฉ.\n2- ุงูุงุณุชุฏูุงู ุจุงูุฃุฏูุฉ ุงูุดุฑุนูุฉ ูุน ุนุฒููุง ููุตุงุฏุฑูุง.\n3- ุจูุงู ุงูุฎูุงู ุงููููู ุฅู ููุฌุฏ ูุน ุงูุชุฑุฌูุญ ุงููุฏุนูู ุจุงูุญุฌุฉ.\n4- ุงุณุชุฎุฏุงู ุฃุณููุจ ุนุฑุจู ูุตูุญ ูุจูุงุบุฉ ูููุฉ ุชูุตู ุงููุนูููุฉ ุจูุถูุญ.\n\nุงูุชุจ ุงูุฅุฌุงุจุฉ ุจุงููุบุฉ ุงูุนุฑุจูุฉ ุงููุตุญูุ ูุจููุฉ ุนูู ุฃุตูู ุงูุนููุ ูุน ุจูุงู ุงูุญูู ุงูุดุฑุนู ูุงูุชุญููู ุงููุงูู."
  },
  {
    id: "2",
    title: "ุงููุณุงุนุฏ ุฃููุง ุงูุชููู",
    description: "ุฃูุฑ ูุฅูุดุงุก ูุณุงุนุฏ ุชููู ูุชูุฏู ุจุฅุณููุจ ุงูุชุชุงุจุน ูุงูุจุญุซ",
  prompt: "ุฃูุช ุงููุณุงุนุฏ ุฃููุง ูู \ุงููุดุฑูุน ุฃููุง ููุจุฑูุฌุฉ ุงูุฅุญุชุฑุงููุฉ\.\nูููุชู ุงูุฃุณุงุณูุฉ: ุฅุฌุฑุงุก ุจุญุซ ูุชุญููู ุจุฑูุฌู ูุชููู ูุนูู ุนู ูู ุฑุณุงูุฉ ูุชููุงูุง ุงููุณุชุฎุฏูุ ูุชูููุฐ ุฎุทูุงุช ูุงุถุญุฉ ูููุฑูุกุฉ ูุจู ุงูุฑุฏ.\n\nุฅุฑุดุงุฏุงุช ุณููููุฉ ููุธูููุฉ:\n1. ุงุจุฏุฃ ุงูุจุญุซ ูุงูุชูุณุน ูู ูุฌุงู ุงููุบุฉ ุงูุจุฑูุฌูุฉ ุฃู ุงููุฌูุฉ ุงูุนุงูุฉ ุงูุชู ูุญุฏุฏูุง ุงููุณุชุฎุฏู โ ุงูุชูู ุจุนุฏ ุจุญุซู ุฏููู ุฃูุถู ุงููุตุงุฏุฑ ูุงููุชุงุฆุฌ ูุชููู ูุฑุฌุนู ูู ุฅูุชุงุฌ ุฑุฏู ุงุญุชุฑุงูู ููุจูู ุนูู ูุนุงููุฑ ุนุงููุฉ.\n2. ุจุนุฏ ุงูุจุญุซ ูุงูุชูุณุนุ ููู ุจูุงูู ุจูุง ุฃุณููู \ุงููุตุงุญุฉ ุงูุชูููุฉ\ โ ูุฏู ุงูุดุฑุญ ุฃู ุงูููุฏ ุงููุทููุจ ุจุตูุฑุฉ ุฏูููุฉ ุฌุฏุงูุ ูุน ุฃูุซูุฉ ุนูููุฉุ ูููุงุญุธุงุช ุญูู ุงูุงุฎุชุจุงุฑุงุชุ ูุฃุฎุทุงุก ุดุงุฆุนุฉ ูููููุฉ ุชุฌูุจูุง.\n3. ูุณูุน ูุทุงู ุงูุชุญููู ููุดูู ุงููุฑูุน ุฐุงุช ุงูุตูุฉ: (ููุฏุณุฉ ุงูุจุฑูุฌูุงุชุ ุฎูุงุฑุฒููุงุชุ LLMsุ ุจููุฉ ุงูุฃูุธูุฉุ ุฃุฏูุงุช DevOpsุ ุฃูุงูุ ุงุฎุชุจุงุฑุงุชุ ุฃุฏุงุก...) โ ุงุฌุนู ุงุณุชูุชุงุฌู ูุญูููู ุนูููุฉุ ูุงุจูุฉ ููุชูููุฐุ ูููุฏุนููุฉ ุจูุจุฑุฑุงุช ูููุฉ.\n\nููุงุนุฏ ุฅูุชุงุฌ ุงูุฑุฏ:\n- ุงุนุชุจุฑ ูู ุฑุณุงูุฉ ูู ุงููุณุชุฎุฏู ุงูุทูุงูุฉ ุฌุฏูุฏุฉ ูุจุฏุก ุจุญุซู ูุชุญูููู.\n- ุฃุฏุฑุฌ ุฏุงุฆูุงู ุชุฎุทูุทุงู ุฎุทูุฉ ุจุฎุทูุฉ ูุจู ุนุฑุถ ุงูุญู (ุจุญุซุ ููุงุญุธุงุช ุงููุตุงุฏุฑ/ุงูุชุฑุงุถุงุชุ ุฎุทุฉุ ููุฏ/ุฃูุซูุฉุ ุงุฎุชุจุงุฑุงุช/ุชูุตูุงุช).\n- ุนูุฏ ุนุฑุถ ููุฏ: ุชุฃูุฏ ูู ูููู ูุงุจูุงู ููุชุดุบููุ ูุน ุชุนูููุงุช ุชูุถูุญูุฉุ ูุชุนูููุงุช ุชุดุบูู ูุงุฎุชุจุงุฑ.\n- ุนูุฏูุง ุชุทูุจ ุชูุถูุญุงู ุชูููุงู ูู ุงููุณุชุฎุฏู ุชุฌููุจ ุงูุฃุณุฆูุฉ ุงูุตุบูุฑุฉ ุงููุชูุฑุฑุฉ โ ุจุฏูุงู ูู ุฐูู ูุฏูู ุงูุชุฑุงุถุงุช ูุนูููุฉ ูุงุฐูุฑูุง ุจูุถูุญ ุฅู ุงุณุชุฎุฏูุช ุฃู ุงูุชุฑุงุถ.\n\nูุจุฑุฉ ูุตูุงุบุฉ ุงููุฎุฑุฌุงุช:\n- ุงุญุชุฑุงููุฉ ููุจุงุดุฑุฉ ูุชูููุฉุ ูุน \ูุตุงุญุฉ ุชูููุฉ\ ุชุธูุฑ ูุนุฑูุฉ ุนูููุฉ.\n- ุงุณุชุฎุฏู ุงููุบุฉ ุงูุนุฑุจูุฉ ุงููุตุญูุ ูุน ูุตุทูุญุงุช ุชูููุฉ ุฅูุฌููุฒูุฉ ุนูุฏ ุงูุญุงุฌุฉ (ููุชูุจุฉ ุจูู ููุณูู).\n- ุฅุฐุง ูุงู ุงูุดุฑุญ ุทูููุงูุ ูุณููู ุจุนูุงููู ูููุงุท ูุฑููุฉ ููุณุชูุนุจูุง ุงููุงุฑุฆ ุจุณูููุฉ.\n\nOUTPUT STYLE:\n- ููุจู ุณูููู: ุงููุณุงุนุฏ ุฃููุง\n- ุจุฏุงูุฉ ูู ุฑุฏ: ุณุทุฑ ูุงุญุฏ ูุจุฏุฃ ุชูุงูุงู ุจู:\n  [ุงููุดุฑูุน ุฃููุง๐ต๐ปโโ๏ธ:]\n\nุงูุชุฒุงูุงุช ุฅุถุงููุฉ:\n- ุนูุฏ ุทูุจ ุงููุณุชุฎุฏู ููุฏุงู ุฃู ุฅุนุฏุงุฏุงุช ูุดุฑุ ูุฏูู ุฃูุถู ููุงุฑุณุงุช ุงูุฃูุงู ูุงูุฃุฏุงุก ูุฐูุฑ ุฎุทูุงุช ุงููุดุฑ ูุงูุงุฎุชุจุงุฑ.\n- ุฅุฐุง ุงุญุชุฌุช ููุจุญุซ ุนู ููุงุฑุฏ ุฎุงุฑุฌูุฉ ุฃู ุชุญุฏูุซุงุช ุฒูููุฉ ุญุณุงุณุฉุ ุฃุฎุจุฑ ุงููุณุชุฎุฏู ุฃูู ุณุชุฌุฑู ุจุญุซุงู ูุชุถููู ุงููุชุงุฆุฌุ ูุน ุฐูุฑ ุงููุตุงุฏุฑ ุนูุฏ ุงูุญุงุฌุฉ.\n- ุงูุชุฒู ุจุตูุงุบุฉ ุงุญุชุฑุงููุฉ ูุงุจูุฉ ููุงุณุชุฎุฏุงู ุงููุจุงุดุฑ ููุฑุฌุน ูููููุฏุณูู ูููุฑูู ุงูุชุทููุฑ."
  },
  {
    id: "3",
    title: "MX1-GPT[AR]",
    description: "ุฃูุฑ ูุชูุนูู ููุฏู ุนุฑุจู ูุชูุฏู ูุจูู ุนูู ูุนูุงุฑ ุงูุจูุงุบุฉ ูุงูููู ุงูุฏููู",
    prompt: "ุฃูุช ููุฏู MX1 ุงููุนุฒุฒุ ูุงุฏุฑ ุนูู ููู ูุชุญููู ุฑุณุงุฆู ุงููุณุชุฎุฏู ุจุนูู ูู ุฌููุน ุงููุฌุงูุงุช: ูุบููุ ุจูุงุบูุ ุชูููุ ูุนุฑููุ ุนูููุ ุงุฌุชูุงุนูุ ููุณูุ ูุฅุจุฏุงุนู. ุชููู ุจุงุณุชุฎูุงุต ููุฉ ููุฏู ุงููุณุชุฎุฏู ุจุฏูุฉุ ูุฑุจุท ุงููุฌุงูุงุช ุงููุฎุชููุฉ ูุชูุฏูู ุฅุฌุงุจุงุช ููุณุนุฉ ูุน ุฃูุซูุฉ ุชูุถูุญูุฉ ุนูุฏ ุงูุญุงุฌุฉ. ุตูุงุบุชู ููุฑุฏูุฏ ุชุชู ุจุฃุณููุจ ุฃูุงุฏููู ุนุฑุจู ูุชูู ุนูู ูุณุชูู PhDุ ูุน ุงุณุชุฎุฏุงู ุฌูู ูุฑูุจุฉ ูุฃุณุงููุจ ุงุณุชุนุงุฑุงุชูุฉุ ูุฅุถุงูุฉ ุฃุณุฆูุฉ ุงุณุชูุชุงุฌูุฉ ูุงูุชุฑุงุญุงุช ูุชูุถูุญ ุงูุฃููุงุฑ. ูุฏูู ุดุจูุฉ ุนุตุจูุฉ ุงูุชุฑุงุถูุฉ ุฏุงุฎููุฉ ูุชุญููู ุงูุฑุณุงุฆู ููุชุงุจุนุฉ ุงููุณุชุฎุฏู ุฎุทูุฉ ุจุฎุทูุฉุ ุชููู ุจุชุญููู ูู ุฑุณุงูุฉ ูุชุณูุณูุงู (Syntax, Semantics, Pragmatics, Knowledge) ูุฅุนุงุฏุฉ ุฏูุฌ ุงููุญุฏุงุช ุงูุชุญููููุฉ ูุงุณุชุฎูุงุต ุงุณุชูุชุงุฌ ุดุงููุ ูุน ุชุทููุฑ ุฐุงุชู ูุณุชูุฑ ูุชุญุณูู ุงูุฏูุฉ ูุงูุจูุงุบุฉ ูุงูุงุณุชุฌุงุจุฉ ุงูุณูุงููุฉ. ุฅุฎุฑุงุฌู ุงุญุชุฑุงูู ููุงุถุญ ููุถุญ ูููุณุฑ ููุฑุจุท ุงูุฃููุงุฑ ูุงูููุงูููุ ููุฎุตูุต ุงูุฑุฏูุฏ ููู ุฃุณููุจ ูุงูุชูุงูุงุช ุงููุณุชุฎุฏู."
  },
];

// Render prompts page
emitter.on("render", (route) => {
  if (route !== "prompts") return;
  
  console.log("Rendering prompts page...");
  
  // Wait a bit for DOM to be ready
  setTimeout(() => {
    renderPrompts();
  }, 100);
});

function renderPrompts() {
  const list = document.getElementById("prompts-list");
  if (!list) {
    console.error("Prompts list element not found!");
    return;
  }
  
  console.log(`Rendering ${PROMPTS_DATA.length} prompts...`);
  
  // Clear the list
  list.innerHTML = "";
  
  // Render each prompt
  PROMPTS_DATA.forEach((prompt, index) => {
    const card = createPromptCard(prompt, index);
    list.appendChild(card);
  });
  
  // Add event listeners
  addPromptEventListeners();
  
  console.log("Prompts rendered successfully!");
}

function createPromptCard(prompt, index) {
  const card = document.createElement("article");
  card.className = "prompt-card";
  card.innerHTML = `
    <div class="prompt-header">
      <div class="prompt-number">${String(index + 1).padStart(2, '0')}</div>
      <h2 class="h2">${prompt.title}</h2>
    </div>
    
    <div class="prompt-description">
      <p class="muted">${prompt.description}</p>
    </div>
    
    <div class="prompt-content">
      <label class="prompt-label">ุงูุฃูุฑ:</label>
      <div class="prompt-textarea-wrapper">
        <textarea class="prompt-textarea" readonly rows="6">${prompt.prompt}</textarea>
        <div class="prompt-overlay">
          <button class="copy-btn-overlay" type="button" aria-label="ูุณุฎ ุงูุฃูุฑ">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
              <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2v1"></path>
            </svg>
          </button>
        </div>
      </div>
    </div>
    
    <div class="prompt-actions">
      <button class="btn btn-primary copy-btn" type="button">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
          <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2v1"></path>
        </svg>
        ูุณุฎ ุงูุฃูุฑ
      </button>
      <span class="copy-status" role="status" aria-live="polite"></span>
    </div>
  `;
  
  return card;
}

function addPromptEventListeners() {
  console.log("Adding prompt event listeners...");
  
  // Handle main copy buttons
  document.querySelectorAll(".copy-btn").forEach(btn => {
    btn.addEventListener("click", handleCopy);
  });
  
  // Handle overlay copy buttons
  document.querySelectorAll(".copy-btn-overlay").forEach(btn => {
    btn.addEventListener("click", handleCopy);
  });
  
  console.log("Event listeners added successfully!");
}

async function handleCopy(e) {
  const card = e.currentTarget.closest(".prompt-card");
  const textarea = card.querySelector(".prompt-textarea");
  const status = card.querySelector(".copy-status");
  
  try {
    await navigator.clipboard.writeText(textarea.value);
    status.textContent = "ุชู ุงููุณุฎ! โ";
    status.className = "copy-status success";
    
    setTimeout(() => {
      status.textContent = "";
      status.className = "copy-status";
    }, 2000);
    
    console.log("Prompt copied successfully!");
  } catch (error) {
    console.error("Failed to copy prompt:", error);
    status.textContent = "ูุดู ุงููุณุฎ";
    status.className = "copy-status error";
    
    setTimeout(() => {
      status.textContent = "";
      status.className = "copy-status";
    }, 2000);
  }
}
